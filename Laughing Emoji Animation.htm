<!DOCTYPE html>
<html lang="en"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta charset="UTF-8">  
    <meta http-equip="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Laughing Emoji Animation</title>
    <link rel="stylesheet" href="Laughing%20Emoji%20Animation_files/style.css">
    <style>
        /* Initially hide the content and audio */
        #content {
            display: none;
        }
    </style>
</head>
<body>
    <button id="revealButton" onclick="showContent()" style="font-size: 25px; background-color: lightgrey; color: black; border-width: 25px;"> Click Me </button>
    
    <div id="content">
        <p>laugh</p>
        <audio id="audio" loop="">
            <source src="Laughing%20Emoji%20Animation_files/laugh.mp3" type="audio/mp3">
        </audio>
        <div class="laugh">
            <div class="face">
                <div class="eyes"></div>
                <div class="mouth">
                    <div class="tongue"></div>
                </div>
            </div>
        </div>
    </div>

    <script>
        function showContent() {
            // Show the hidden content
            document.getElementById('content').style.display = 'block';

            // Play the audio
            const audio = document.getElementById('audio');
            audio.play();

            // Hide the button
            document.getElementById('revealButton').style.display = 'none';
        }
    </script>
<!-- Code injected by live-server -->
<script>
	// <![CDATA[  <-- For SVG support
	if ('WebSocket' in window) {
		(function () {
			function refreshCSS() {
				var sheets = [].slice.call(document.getElementsByTagName("link"));
				var head = document.getElementsByTagName("head")[0];
				for (var i = 0; i < sheets.length; ++i) {
					var elem = sheets[i];
					var parent = elem.parentElement || head;
					parent.removeChild(elem);
					var rel = elem.rel;
					if (elem.href && typeof rel != "string" || rel.length == 0 || rel.toLowerCase() == "stylesheet") {
						var url = elem.href.replace(/(&|\?)_cacheOverride=\d+/, '');
						elem.href = url + (url.indexOf('?') >= 0 ? '&' : '?') + '_cacheOverride=' + (new Date().valueOf());
					}
					parent.appendChild(elem);
				}
			}
			var protocol = window.location.protocol === 'http:' ? 'ws://' : 'wss://';
			var address = protocol + window.location.host + window.location.pathname + '/ws';
			var socket = new WebSocket(address);
			socket.onmessage = function (msg) {
				if (msg.data == 'reload') window.location.reload();
				else if (msg.data == 'refreshcss') refreshCSS();
			};
			if (sessionStorage && !sessionStorage.getItem('IsThisFirstTime_Log_From_LiveServer')) {
				console.log('Live reload enabled.');
				sessionStorage.setItem('IsThisFirstTime_Log_From_LiveServer', true);
			}
		})();
	}
	else {
		console.error('Upgrade your browser. This Browser is NOT supported WebSocket for Live-Reloading.');
	}
	// ]]>
</script>


 </body></html>